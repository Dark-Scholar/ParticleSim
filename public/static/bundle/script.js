(()=>{"use strict";const t=(s,i)=>{let e=Math.floor(Math.random()*(i-s+1)+s);return 0===e&&(e=t(s,i)),e},s=t,i=class{ctx;x;y;radius;color;velocityX;velocityY;speed;velocityXMutator;velocityYMutator;mass;constructor({ctx:t,x:s,y:i,radius:e,color:o,speed:a,velocityX:h,velocityY:c,velocityXMutator:r=1,velocityYMutator:l=1,mass:n=1}){this.ctx=t,this.x=s,this.y=i,this.radius=e,this.color=o,this.velocityX=h,this.velocityY=c,this.speed=a,this.velocityXMutator=r,this.velocityYMutator=l,this.mass=n}draw(){this.ctx.beginPath(),this.ctx.arc(this.x,this.y,this.radius,0,2*Math.PI),this.ctx.fillStyle=this.color,this.ctx.shadowColor="rgba(0, 0, 0, 0.3)",this.ctx.shadowBlur=.6,this.ctx.shadowOffsetX=3,this.ctx.shadowOffsetY=3,this.ctx.fill(),this.ctx.closePath()}update(){this.x+=this.velocityX*this.speed*Math.PI/this.velocityXMutator,this.y+=this.velocityY*this.speed*Math.PI/this.velocityYMutator}};var e;!function(t){let s;!function(t){t.PARTICLEINPUT="num_particles",t.VELOCITYINPUT="num_velocity",t.SPEEDINPUT="num_speed",t.MASSINPUT="num_mass"}(s=t.SIMCONTROLS||(t.SIMCONTROLS={})),t.SIMCONTROLS_NAME="sim_controls"}(e||(e={}));const o=e;var a;!function(t){t.INITIAL_PARTICLE_NUM=s(1,1e3),t.INITIAL_VELOCITY_DIVISOR=5,t.INITIAL_SPEED=1,t.INITIAL_MASS=1}(a||(a={}));const h=a,c=new class{MAX_PARTICLES=1e3;MIN_PARTICLES=1;MAX_ITER=1e6;root;canvas;ctx;boundary;constructor({containerId:t,width:s,height:i}){this.root=document.querySelector(`#${t}`),this.canvas=document.createElement("canvas"),this.ctx=this.canvas.getContext("2d"),s&&i&&(this.canvas.width=s,this.canvas.height=i)}initialize(){this.root&&(this.root.style.backgroundColor="white",this.root.style.borderRadius="2%",this.root.style.boxShadow="0 0 10px rgba(0, 0, 0, 0.3)",this.root.style.border="1px solid black",this.root.style.position="relative",this.root.style.width="100%",this.root.style.height="90vh",this.root.appendChild(this.canvas),window.addEventListener("resize",this.resizeCanvas.bind(this)),this.resizeCanvas()),this.boundary=new class{x;y;width;height;constructor(t,s,i,e){this.x=t,this.y=s,this.width=i,this.height=e}isCollidingWith(t){const{x:s,y:i,radius:e}=t;return s+e>this.x+this.width||s-e<this.x||i+e>this.y+this.height||i-e<this.y}resolveCollision(t){const{x:s,y:i,radius:e,velocityX:o,velocityY:a}=t;(s+e>this.x+this.width||s-e<this.x)&&(t.velocityX=-o+(.2*Math.random()-.1)),(i+e>this.y+this.height||i-e<this.y)&&(t.velocityY=-a+(.2*Math.random()-.1))}resolveCollisions(t){for(const s of t)this.isCollidingWith(s)&&this.resolveCollision(s)}}(0,0,this.canvas.width,this.canvas.height)}clearCanvas(){this.ctx?.clearRect(0,0,this.canvas.width,this.canvas.height)}resizeCanvas(){this.root&&this.ctx&&(this.canvas.width=this.root.offsetWidth,this.canvas.height=this.root.offsetHeight)}drawLine(t,s,i,e){this.ctx&&(this.ctx.moveTo(t,s),this.ctx.lineTo(i,e),this.ctx.stroke())}}({containerId:"canvas"});c.initialize();let r=h.INITIAL_VELOCITY_DIVISOR,l=h.INITIAL_SPEED,n=[];const d=new class{form;constructor(t){this.form=document.querySelector(`#${t}`)}getInputValue(t){return this.form.querySelector(`#${t}`).value}setInputValue(t,s){this.form.querySelector(`#${t}`).value=s}}(o.SIMCONTROLS_NAME),I=document.getElementById(o.SIMCONTROLS.PARTICLEINPUT),y=document.getElementById(o.SIMCONTROLS.SPEEDINPUT),u=document.getElementById(o.SIMCONTROLS.MASSINPUT),v=()=>{const t=parseInt(I.value,10)||h.INITIAL_PARTICLE_NUM;t>n.length?S({particles:n,desiredNumParticles:t}):t<n.length&&T({particles:n,desiredNumParticles:t})},S=({particles:t,desiredNumParticles:e})=>{const o=e-t.length;let a=0;for(;a<o&&a<c.MAX_ITER;)t.push(new i({ctx:c.ctx,x:s(0,c.canvas.width),y:s(0,c.canvas.height),radius:10,color:"#"+(1048575*Math.random()*1e6).toString(16).slice(0,6),speed:l,velocityX:s(-2,2),velocityY:s(-2,2),velocityXMutator:r,velocityYMutator:r})),a++},T=({particles:t,desiredNumParticles:s})=>{const i=t.length-s;t.splice(s,i)};I.addEventListener("keydown",(t=>{"Enter"===t.key&&v()})),y.addEventListener("keydown",(t=>{"Enter"===t.key&&(l=parseFloat(y.value)||h.INITIAL_SPEED,v())})),u.addEventListener("keydown",(t=>{"Enter"===t.key&&(l=parseFloat(u.value)||h.INITIAL_MASS,v())})),d.setInputValue(o.SIMCONTROLS.PARTICLEINPUT,h.INITIAL_PARTICLE_NUM.toString()),d.setInputValue(o.SIMCONTROLS.VELOCITYINPUT,r.toString()),d.setInputValue(o.SIMCONTROLS.SPEEDINPUT,h.INITIAL_SPEED.toString()),d.setInputValue(o.SIMCONTROLS.MASSINPUT,h.INITIAL_MASS.toString()),v();const x=()=>{c.clearCanvas();for(let t=0;t<n.length;t++){const s=n[t];s.speed=l,s.draw();const i=s.x+s.velocityX,e=s.y+s.velocityY,o=i-s.radius<0||i+s.radius>c.canvas.width,a=e-s.radius<0||e+s.radius>c.canvas.height;o&&(s.velocityX*=-1,s.x+=s.velocityX),a&&(s.velocityY*=-1,s.y+=s.velocityY),s.update();for(let i=t+1;i<n.length;i++){const t=n[i],e=t.x-s.x,o=t.y-s.y,a=Math.sqrt(e*e+o*o);if(a<s.radius+t.radius){const i=e/a,h=o/a,c=(t.velocityX-s.velocityX)*i+(t.velocityY-s.velocityY)*h;if(c<0){const e=2*c/(s.mass+t.mass);s.velocityX+=e*t.mass*i,s.velocityY+=e*t.mass*h,t.velocityX-=e*s.mass*i,t.velocityY-=e*s.mass*h;const o=.5*(a-s.radius-t.radius);s.x-=o*i,s.y-=o*h,t.x+=o*i,t.y+=o*h}}}}requestAnimationFrame(x)};x()})();