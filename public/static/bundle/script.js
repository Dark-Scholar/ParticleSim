(()=>{"use strict";const t=(e,i)=>{let s=Math.floor(Math.random()*(i-e+1)+e);return 0===s&&(s=t(e,i)),s},e=t,i=()=>"#"+(1048575*Math.random()*1e6).toString(16).slice(0,6),s=class{ctx;x;y;radius;color;velocityX;velocityY;speed;velocityXMutator;velocityYMutator;constructor({ctx:t,x:e,y:i,radius:s,color:o,speed:h,velocityX:a,velocityY:c,velocityXMutator:r=1,velocityYMutator:l=1}){this.ctx=t,this.x=e,this.y=i,this.radius=s,this.color=o,this.velocityX=a,this.velocityY=c,this.speed=h,this.velocityXMutator=r,this.velocityYMutator=l}draw(){this.ctx.beginPath(),this.ctx.arc(this.x,this.y,this.radius,0,2*Math.PI),this.ctx.fillStyle=this.color,this.ctx.shadowColor="rgba(0, 0, 0, 0.3)",this.ctx.shadowBlur=.6,this.ctx.shadowOffsetX=3,this.ctx.shadowOffsetY=3,this.ctx.fill(),this.ctx.closePath()}update(){this.x+=this.velocityX*this.speed*Math.PI/this.velocityXMutator,this.y+=this.velocityY*this.speed*Math.PI/this.velocityYMutator}};var o;!function(t){let e;!function(t){t.PARTICLEINPUT="num_particles",t.VELOCITYINPUT="num_velocity",t.SPEEDINPUT="num_speed"}(e=t.SIMCONTROLS||(t.SIMCONTROLS={})),t.SIMCONTROLS_NAME="sim_controls"}(o||(o={}));const h=o;var a;!function(t){t.INITIAL_PARTICLE_NUM=e(1,1e3),t.INITIAL_VELOCITY_DIVISOR=5,t.INITIAL_SPEED=1}(a||(a={}));const c=a,r=new class{MAX_PARTICLES=1e3;MIN_PARTICLES=1;MAX_ITER=1e6;root;canvas;ctx;boundary;constructor({containerId:t,width:e,height:i}){this.root=document.querySelector(`#${t}`),this.canvas=document.createElement("canvas"),this.ctx=this.canvas.getContext("2d"),e&&i&&(this.canvas.width=e,this.canvas.height=i)}initialize(){this.root&&(this.root.style.backgroundColor="white",this.root.style.borderRadius="2%",this.root.style.boxShadow="0 0 10px rgba(0, 0, 0, 0.3)",this.root.style.border="1px solid black",this.root.style.position="relative",this.root.style.width="100%",this.root.style.height="90vh",this.root.appendChild(this.canvas),window.addEventListener("resize",this.resizeCanvas.bind(this)),this.resizeCanvas()),this.boundary=new class{x;y;width;height;constructor(t,e,i,s){this.x=t,this.y=e,this.width=i,this.height=s}isCollidingWith(t){const{x:e,y:i,radius:s}=t;return e+s>this.x+this.width||e-s<this.x||i+s>this.y+this.height||i-s<this.y}resolveCollision(t){const{x:e,y:i,radius:s,velocityX:o,velocityY:h}=t;(e+s>this.x+this.width||e-s<this.x)&&(t.velocityX=-o+(.2*Math.random()-.1)),(i+s>this.y+this.height||i-s<this.y)&&(t.velocityY=-h+(.2*Math.random()-.1))}resolveCollisions(t){for(const e of t)this.isCollidingWith(e)&&this.resolveCollision(e)}}(0,0,this.canvas.width,this.canvas.height)}clearCanvas(){this.ctx?.clearRect(0,0,this.canvas.width,this.canvas.height)}resizeCanvas(){this.root&&this.ctx&&(this.canvas.width=this.root.offsetWidth,this.canvas.height=this.root.offsetHeight)}drawLine(t,e,i,s){this.ctx&&(this.ctx.moveTo(t,e),this.ctx.lineTo(i,s),this.ctx.stroke())}}({containerId:"canvas"});r.initialize();let l=c.INITIAL_PARTICLE_NUM,n=c.INITIAL_VELOCITY_DIVISOR,d=c.INITIAL_SPEED,I=[];const u=new class{form;constructor(t){this.form=document.querySelector(`#${t}`)}getInputValue(t){return this.form.querySelector(`#${t}`).value}setInputValue(t,e){this.form.querySelector(`#${t}`).value=e}}(h.SIMCONTROLS_NAME),v=document.getElementById(h.SIMCONTROLS.PARTICLEINPUT),y=document.getElementById(h.SIMCONTROLS.SPEEDINPUT);let T=!0;const x=({speed:t})=>{const e=parseInt(v.value,10)||c.INITIAL_PARTICLE_NUM;e>I.length?M({particles:I,desiredNumParticles:e}):e<I.length&&S({particles:I,desiredNumParticles:e}),T&&(E({particles:I,numParticles:l}),T=!1)},E=({particles:t,numParticles:o})=>{let h=t.length;for(;h<o&&h<r.MAX_ITER;)t.push(new s({ctx:r.ctx,x:e(0,r.canvas.width),y:e(0,r.canvas.height),radius:10,color:i(),speed:d,velocityX:e(-2,2),velocityY:e(-2,2),velocityXMutator:n,velocityYMutator:n})),h++},M=({particles:t,desiredNumParticles:o})=>{const h=o-t.length;let a=0;for(;a<h&&a<r.MAX_ITER;)t.push(new s({ctx:r.ctx,x:e(0,r.canvas.width),y:e(0,r.canvas.height),radius:10,color:i(),speed:d,velocityX:e(-2,2),velocityY:e(-2,2),velocityXMutator:n,velocityYMutator:n})),a++},S=({particles:t,desiredNumParticles:e})=>{const i=t.length-e;t.splice(e,i)};v.addEventListener("keydown",(t=>{"Enter"===t.key&&x({speed:d})})),y.addEventListener("keydown",(t=>{"Enter"===t.key&&(d=parseFloat(y.value)||c.INITIAL_SPEED,x({speed:d}))})),u.setInputValue(h.SIMCONTROLS.PARTICLEINPUT,c.INITIAL_PARTICLE_NUM.toString()),u.setInputValue(h.SIMCONTROLS.VELOCITYINPUT,n.toString()),u.setInputValue(h.SIMCONTROLS.SPEEDINPUT,c.INITIAL_SPEED.toString()),x({speed:d});const N=()=>{r.clearCanvas();for(const t of I)t.speed=d,t.draw(),t.update();r.boundary.resolveCollisions(I),requestAnimationFrame(N)};N()})();